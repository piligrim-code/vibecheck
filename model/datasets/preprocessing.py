import re
import pymorphy3

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –¥–ª—è –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏–∏
morph = pymorphy3.MorphAnalyzer()

def preprocess_for_annotation(text):
    """
    –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏: –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, 
    —É–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫, —É–ø–æ–º–∏–Ω–∞–Ω–∏–π, —ç–º–æ–¥–∑–∏ –∏ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤.

    Args:
        text (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç.

    Returns:
        str: –û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
    
    Example:
        >>> preprocess_for_annotation("–ü—Ä–∏–≤–µ—Ç! üòä –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å @username –∏ —Å—Å—ã–ª–∫–æ–π https://example.com. üöÄ")
        '–ø—Ä–∏–≤–µ—Ç —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏ —Å—Å—ã–ª–∫–æ–π'
    """
    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    text = text.lower()
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, @username)
    text = re.sub(r'@\w+', '', text)
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏
    emoji_pattern = re.compile("["
                               u"\U0001F600-\U0001F64F"  # –≠–º–æ—Ü–∏–∏ –∏ —Å–º–∞–π–ª–∏–∫–∏
                               u"\U0001F300-\U0001F5FF"  # –°–∏–º–≤–æ–ª—ã –∏ –ø–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã
                               u"\U0001F680-\U0001F6FF"  # –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –∫–∞—Ä—Ç—ã
                               u"\U0001F1E0-\U0001F1FF"  # –§–ª–∞–≥–∏ (iOS)
                               u"\U00002700-\U000027BF"  # –†–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                               u"\U000024C2-\U0001F251"  # –°–∏–º–≤–æ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞
                               "]+", flags=re.UNICODE)
    text = emoji_pattern.sub(r'', text)
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    text = re.sub(r'\s+', ' ', text).strip()
    
    return text

def preprocess_for_bert(text):
    """
    –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å BERT: –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, 
    —É–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫, —É–ø–æ–º–∏–Ω–∞–Ω–∏–π, —ç–º–æ–¥–∑–∏, –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤, –∞ —Ç–∞–∫–∂–µ –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏—è.

    Args:
        text (str): –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç.

    Returns:
        str: –û—á–∏—â–µ–Ω–Ω—ã–π –∏ –ª–µ–º–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç.
    
    Example:
        >>> preprocess_for_bert("–ü—Ä–∏–≤–µ—Ç! üòä –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è @username –∏ —Å—Å—ã–ª–∫–∞ https://example.com. üöÄ –†–∞–±–æ—Ç–∞–µ–º —Å BERT.")
        '–ø—Ä–∏–≤–µ—Ç —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—Å—ã–ª–∫–∞ —Ä–∞–±–æ—Ç–∞—Ç—å —Å berto'
    """
    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    text = text.lower()

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)

    # –£–¥–∞–ª–µ–Ω–∏–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, @username)
    text = re.sub(r'@\w+', '', text)

    # –£–¥–∞–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏
    emoji_pattern = re.compile("["
                               u"\U0001F600-\U0001F64F"  # –≠–º–æ—Ü–∏–∏ –∏ —Å–º–∞–π–ª–∏–∫–∏
                               u"\U0001F300-\U0001F5FF"  # –°–∏–º–≤–æ–ª—ã –∏ –ø–∏–∫—Ç–æ–≥—Ä–∞–º–º—ã
                               u"\U0001F680-\U0001F6FF"  # –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –∫–∞—Ä—Ç—ã
                               u"\U0001F1E0-\U0001F1FF"  # –§–ª–∞–≥–∏ (iOS)
                               u"\U00002700-\U000027BF"  # –†–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                               u"\U000024C2-\U0001F251"  # –°–∏–º–≤–æ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—Å—Ç–∞
                               "]+", flags=re.UNICODE)
    text = emoji_pattern.sub(r'', text)

    # –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–∏–µ –∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r'[^–∞-—è–ê-–Ø—ë–Åa-zA-Z\s]', '', text)

    # –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    text = re.sub(r'\s+', ' ', text).strip()

    # –õ–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ (–ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Å–ª–æ–≤ –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ)
    text = ' '.join([morph.parse(word)[0].normal_form for word in text.split()])

    return text

# –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    example_text_annotation = "–ü—Ä–∏–≤–µ—Ç, 1 –Ω—É —Å–µ–π—á–∞—Å –±–∞–±–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –¥–µ–¥–∫–∞–º–∏! üòä –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å @username –∏ —Å—Å—ã–ª–∫–æ–π https://example.com. üöÄ"
    print("–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏:")
    print(preprocess_for_annotation(example_text_annotation))

    example_text_bert = "–ü—Ä–∏–≤–µ—Ç, 12 –Ω—É —Å–µ–π—á–∞—Å –±–∞–±–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –¥–µ–¥–∫–∞–º–∏! üòä –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è @username –∏ —Å—Å—ã–ª–∫–∞ https://example.com. üöÄ –†–∞–±–æ—Ç–∞–µ–º —Å BERT."
    print("\n–û—á–∏—â–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è BERT:")
    print(preprocess_for_bert(example_text_bert))
